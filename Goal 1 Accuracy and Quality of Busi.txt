import org.springframework.http.ResponseEntity;
import org.springframework.web.client.RestTemplate;

import java.io.*;
import java.text.SimpleDateFormat;
import java.util.Date;

public class RestTemplateExample {

    public static void main(String[] args) throws IOException {
        // Create a RestTemplate instance
        RestTemplate restTemplate = new RestTemplate();

        // Define the URL of the resource
        String url = "https://example.com/large-resource";

        // Make an HTTP GET request and get the ResponseEntity
        ResponseEntity<byte[]> responseEntity = restTemplate.getForEntity(url, byte[].class);

        // Check if the response is successful (status code 200)
        if (responseEntity.getStatusCode().is2xxSuccessful()) {
            // Get the response body as a byte array
            byte[] responseBody = responseEntity.getBody();

            // Generate a dynamic file name based on the current timestamp
            String timestamp = new SimpleDateFormat("yyyyMMdd_HHmmss").format(new Date());
            String fileName = "response_content_" + timestamp + ".txt";

            // Write the response body to the dynamic file
            File outputFile = new File(fileName);
            writeByteArrayToFile(responseBody, outputFile);

            // Read from the same file
            String contentFromFile = readFromFile(outputFile);

            // Process the content as needed
            System.out.println("Content read from file: " + contentFromFile);
        } else {
            // Handle non-successful response (e.g., log an error)
            System.err.println("HTTP Request failed with status code: " + responseEntity.getStatusCodeValue());
        }
    }

    private static void writeByteArrayToFile(byte[] content, File outputFile) throws IOException {
        try (BufferedOutputStream outputStream = new BufferedOutputStream(new FileOutputStream(outputFile))) {
            outputStream.write(content);
        }
    }

    private static String readFromFile(File file) throws IOException {
        try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
            StringBuilder stringBuilder = new StringBuilder();
            String line;
            while ((line = reader.readLine()) != null) {
                stringBuilder.append(line).append("\n");
            }
            return stringBuilder.toString();
        }
    }
}
